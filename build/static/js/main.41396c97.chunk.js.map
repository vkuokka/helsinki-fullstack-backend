{"version":3,"sources":["components/filter.js","components/services/person.js","components/add.js","components/list.js","components/notification.js","App.js","index.js"],"names":["Filter","newFilter","setNewFilter","value","onChange","event","target","baseUrl","axios","get","then","response","data","newObject","post","modifiedObject","put","id","delete","Add","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setMessage","onSubmit","preventDefault","filter","person","name","length","window","confirm","find","number","personService","returnedPerson","map","text","type","catch","error","setTimeout","message","personObject","concat","List","personList","toLowerCase","includes","key","onClick","x","remove","Notification","className","App","useState","useEffect","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41396c97.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({newFilter, setNewFilter}) => {\n\tconst filterWith = (event) => setNewFilter(event.target.value)\n\treturn (\n\t\t<div> filter shown with <input value={newFilter} onChange={filterWith}/> </div>\n\t)\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n    return request.then(response => {\n\t\treturn response.data\n\t})\n}\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject)\n\treturn request.then(response => {\n\t\treturn response.data\n\t})\n}\n\nconst update = (modifiedObject) => {\n\tconst request = axios.put(`${baseUrl}/${modifiedObject.id}`, modifiedObject)\n\treturn request.then(response => {\n\t\treturn response.data\n\t})\n}\nconst remove = (id) => {\n\tconst request = axios.delete(`${baseUrl}/${id}`)\n\treturn request.then(response => {\n\t\treturn response.data\n\t})\n}\n\nexport default {getAll, create, update, remove}","import React from 'react'\nimport personService from './services/person'\n\nconst Add = ({persons, setPersons, newName, setNewName, newNumber, setNewNumber, setMessage}) => {\n\tconst addName = (event) => {\n\t\tevent.preventDefault(event)\n\t\tif (persons.filter(person => person.name === newName).length !== 0) {\n\t\t\tif (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\n\t\t\t\tconst modifiedObject = {...persons.find(person => person.name === newName), number : newNumber}\n\t\t\t\tpersonService.update(modifiedObject)\n\t\t\t\t\t.then(returnedPerson => {\n\t\t\t\t\t\tsetPersons(persons.map(person => person.name !== returnedPerson.name ? person : returnedPerson))\n\t\t\t\t\t\tsetMessage({text: `Changed ${modifiedObject.name} number`, type: 'success'})\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => setMessage(\n\t\t\t\t\t\t{text: `Information of ${modifiedObject.name} has already been removed from server`, type: 'failure'}\n\t\t\t\t\t))\n\t\t\t\t\tsetTimeout (() => setMessage({message: null, type: null}), 3000)\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst personObject = {\n\t\t\t\tname: newName,\n\t\t\t\tnumber: newNumber\n\t\t\t}\n\t\t\tpersonService.create(personObject)\n\t\t\t\t.then(returnedPerson => setPersons(persons.concat(returnedPerson)))\n\t\t\tsetMessage({text: `Added ${personObject.name}`, type: 'success'})\n\t\t\tsetTimeout (() => setMessage({message: null, type: null}), 3000)\n\t\t}\n\t  setNewName('')\n\t  setNewNumber('')\n\t}\n\tconst handleNewName = (event) => setNewName(event.target.value)\n\tconst handleNewNumber = (event) => setNewNumber(event.target.value)\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={addName}>\n\t\t\t  <div> name: <input value={newName} onChange={handleNewName}/> </div>\n\t\t\t  <div> number: <input value={newNumber} onChange={handleNewNumber}/> </div>\n\t\t\t  <div> <button type=\"submit\">add</button> </div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default Add\n","import React from 'react'\nimport personService from './services/person'\n\nconst List = ({persons, setPersons, newFilter, setMessage}) => {\n\tconst remove = (person) => {\n\t\tif (window.confirm(`Delete ${person.name} ?`)) {\n\t\t\tpersonService.remove(person.id)\n\t\t\t\t.then(returnedPerson => {\n\t\t\t\t\tsetPersons(persons.filter(x => x.id !== person.id))\n\t\t\t\t})\n\t\t\tsetMessage({text: `Removed ${person.name}`, type: 'success'})\n\t\t\tsetTimeout(() => setMessage({message: null, type: null}), 3000)\n\t\t}\n\t}\n\tconst personList = persons\n\t\t.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\t\t.map(person => {\n\t\t\treturn (\n\t\t\t\t<p key={person.name}>\n\t\t\t\t{person.name} {person.number}\n\t\t\t\t<button onClick={() => remove(person)}>delete</button>\n\t\t\t\t</p>\n\t\t\t)\n\t\t})\n\treturn (\n\t\t<div>\n    \t\t{personList}\n\t\t</div>\n\t)\n}\n\nexport default List\n","import React from 'react'\nimport '../index.css'\n\nconst Notification = ({message}) => {\n\tif (!message.text) {\n\t\treturn null\n\t}\n\telse if (message.type === 'success') {\n\t\treturn (\n\t\t\t<div className=\"success\">\n\t\t\t\t{message.text}\n\t\t\t</div>\n\t\t)\n\t}\n\telse if (message.type === 'failure') {\n\t\treturn (\n\t\t\t<div className=\"failure\">\n\t\t\t\t{message.text}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/filter'\nimport Add from './components/add'\nimport List from './components/list'\nimport personService from './components/services/person'\nimport Notification from './components/notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState({text: null, type: null})\n\n  const hook = () => {\n    personService.getAll()\n      .then(list => setPersons(list))\n  }\n  useEffect(hook, [])\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={message}/>\n        <Filter newFilter={newFilter} setNewFilter={setNewFilter} />\n        <h2>add a new</h2>\n        <Add persons={persons} setPersons={setPersons} newName={newName} setNewName={setNewName}\n        newNumber={newNumber} setNewNumber={setNewNumber} setMessage={setMessage}/>\n        <h2>Numbers</h2>\n        <List persons={persons} setPersons={setPersons} newFilter={newFilter} setMessage={setMessage} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}